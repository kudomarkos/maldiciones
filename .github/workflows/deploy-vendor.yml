name: Build and deploy PHP app to FTP

on: push
env:
  PHP_VERSION: '8.1'                  # set this to the PHP version to use
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@7c0b4c8c8ebed23eca9ec2802474895d105b11bc
        with:
          php-version: ${{ env.PHP_VERSION }}

      - name: Check if composer.json exists
        id: check_files
        uses: andstor/file-existence-action@87d74d4732ddb824259d80c8a508c0124bf1c673
        with:
          files: 'composer.json'

      - name: Get Composer Cache Directory
        id: composer-cache
        if: steps.check_files.outputs.files_exists == 'true'
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Set up dependency caching for faster installs
        uses: actions/cache@v3
        if: steps.check_files.outputs.files_exists == 'true'
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Run composer install if composer.json exists
        if: steps.check_files.outputs.files_exists == 'true'
        run: composer validate --no-check-publish && composer install --prefer-dist --no-progress

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: php-app
          path: .

      - uses: actions/checkout@v2
      - name: Upload ftp
        uses: sebastianpopp/ftp-action@releases/v2
        with:
          host: ${{ secrets.SERVIDORCETE }}
          user: ${{ secrets.USUARIOTE }}
          password: ${{ secrets.CONTRASENIA }}
          localDir: "vendor"
          remoteDir: "vendor"
          options: "--delete --asci"

      # - name: 📂 Sync files
      #   uses: SamKirkland/FTP-Deploy-Action@4.3.0
      #   with:
      #     server: ${{ secrets.SERVIDORCETE }}
      #     username: ${{ secrets.USUARIOTE }}
      #     password: ${{ secrets.CONTRASENIA }} -->