name: Execute SQLite Commands

on:
  push:
    paths:
      - 'mis_ordenes.txt'  # Ejecutar el action cuando se modifique el archivo de 칩rdenes
      - 'Publicaciones.sqlite3'     # Ejecutar el action cuando se modifique la base de datos SQLite

jobs:
  execute-commands:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install SQLite
        run: sudo apt-get install sqlite3

      - name: Create output directory
        run: mkdir -p output  # Crea la carpeta 'output' si no existe

      - name: Execute SQLite commands from file
        run: |
          sqlite3 Publicaciones.sqlite3 < mis_ordenes.txt

      - name: List output directory
        run: ls -l output
      
      - name: Get repository size
        run: |
          SIZE=$(curl -s https://api.github.com/repos/kudomarkos/maldiciones | jq .size)
          SIZE_MB=$(echo "scale=2; $SIZE / 1024" | bc)

      - name: Update README
        run: |
          # Vaciar el README.md y a침adir nuevo contenido
          echo "# Maldiciones" > README.md
          echo "" >> README.md
          echo "[https://kudomarkos.github.io/maldiciones/](https://kudomarkos.github.io/maldiciones/)" >> README.md
          echo "" >> README.md
          echo "![logo](./static_images/logo_maldiciones.png)" >> README.md
          echo "" >> README.md
          echo "## Tama침o del Repositorio" >> README.md
          echo "El tama침o de este repositorio es aproximadamente $SIZE_MB MB." >> README.md

      - name: Commit and push output directory
        run: |
          if [ -n "$(ls -A output 2>/dev/null)" ]; then
            git config --local user.name "github-actions"
            git config --local user.email "github-actions@github.com"
            git add README.md
            git add output/
            git commit -m "Update files in output directory - $(date '+%Y-%m-%d %H:%M:%S')"
            git push
          else
            echo "No files to commit in output directory."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
